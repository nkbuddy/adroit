{"version":3,"sources":["panelFinish.js","components/DoorTableHead.jsx","components/DoorTableFooter.jsx","components/DoorPrintHead.jsx","components/DoorPrintFooter.jsx","components/DoorPrintBody.jsx","components/DoorTableBody.jsx","components/CreateDoor.jsx","components/Toggle.jsx","components/App.jsx","index.js"],"names":["panelFinish","value","label","id","des","TableHead","React","createElement","className","colSpan","TableFooter","props","items","_useState","useState","_useState2","_slicedToArray","addNumberOfRow","setAddNumberOfRow","testTotal","totalQty","packagingFee","_useState3","_useState4","IsFreight","setIsFreight","row","Number","subtotal","qty","width","height","Math","round","align","type","name","checked","onChange","event","target","onClick","n","onAdd","needRow","handleAddRowNumber","style","printPDF","color","borderStyle","CSVLink","data","filename","PrintHead","_ref","info","rowSpan","src","alt","billing","shipping","date","PrintFooter","ReadOnly","discount","item","ItemNum","description","hingeHole","matchGrain","miterCut","price","Fragment","panelId","NewTableBody","handleDeleteClick","handleCopyClick","handleEditAllInOne","handleEditTwo","widthValue","setWidthValue","heightValue","setHeightValue","_useState5","_useState6","widthDecimal","setWidthDecimal","_useState7","_useState8","heightDecimal","setHeightDecimal","_useState9","_useState10","qtyInteger","setQtyInteger","_useState11","_useState12","oversize","setOversize","isValidNumber","number","test","useEffect","input","isNaN","size","NaN","list","placeholder","panelFinishList","map","key","defaultValue","readOnly","disabled","CreateArea","setItems","setPanelFinish","newItem","matchingFinish","find","finish","mycal","PL","obj","panel_value","unit_price","grain","Sindex","findIndex","pitem","sizeOfDoor","updateRow","itemId","fieldValue","fieldName","getAttribute","newData","_objectSpread","priceArr","editedItem","newItems","_toConsumableArray","updateTwo","deleteRow","index","splice","copyRow","copyItem","tempItem","nanoid","componentPDF","useRef","generatePDF","useReactToPrint","content","current","documentTile","rowItem","i","push","newItemsAdd","concat","hidden","ref","accept","e","file","files","endsWith","reader","FileReader","readAsBinaryString","onload","result","workbook","XLSX","sheetName","SheetNames","sheet","Sheets","parsedData","sheet_to_json","newArray","_loop","Object","keys","forEach","alert","Toggle","isCabinetClicked","setCabinetClicked","isDoorClicked","setDoorClicked","class","CreateDoor","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.03d23943.chunk.js","sourcesContent":["const panelFinish = [\n  {\n    value: 18.0,\n    label: \"Arctic (White) HG\",\n    id: \"MDAC2001-182S90\",\n    des: \"18mm Arctic (White) HG 2S MR MDF 4x8\",\n  },\n  {\n    value: 18.0,\n    label: \"Alabaster 2S HG\",\n    id: \"MDAC2061-182S90\",\n    des: \"18mm Alabaster 2S HG MR MDF 4x8\",\n  },\n  {\n    value: 10.85,\n    label: \"Pearl White HG\",\n    id: \"MDPE3004-181S90\",\n    des: \"3/4 (18mm) Pearl White High Gloss PET MDF Core 4x8\",\n  },\n  {\n    value: 11.85,\n    label: \"Stone Grey (Dark Grey) HG\",\n    id: \"MDPE3020-181S36\",\n    des: \"3/4 (18mm)  Stone Grey (Dark Grey) Super Matte PET MDF Core 4x8\",\n  },\n  {\n    value: 11.85,\n    label: \"Stone Grey (Dark Grey) Super Matte\",\n    id: \"MDPE3020-181S90\",\n    des: \"3/4 (18mm) Stone Grey (Dark Grey) HG PET MDF Core 4x8\",\n  },\n  {\n    value: 11.85,\n    label: \"Eclipse (Black) Super Matte\",\n    id: \"MDPE3023-181S36\",\n    des: \"3/4 (18mm) Eclipse (Black) Super Matte PET MDF Core 4x8\",\n  },\n  {\n    value: 11.85,\n    label: \"Eclipse (Black) HG\",\n    id: \"MDPE3023-181S90\",\n    des: \"3/4 (18mm) Eclipse (Black) HG PET MDF Core 4x8\",\n  },\n  {\n    value: 11.85,\n    label: \"Sun Grey Super Matte\",\n    id: \"MDPE3033-181S36\",\n    des: \"3/4 (18.5mm) Sun Grey Super Matte PET MDF 4x8\",\n  },\n  {\n    value: 11.85,\n    label: \"Sun Grey High Gloss\",\n    id: \"MDPE3033-181S90\",\n    des: \"3/4 (18.5mm) Sun Grey High Gloss PET MDF 4x8\",\n  },\n  {\n    value: 11.85,\n    label: \"Winter Frost (White) Super Matte\",\n    id: \"MDPE3035-181S36\",\n    des: \"3/4 (18mm) Winter Frost (White) Super Matte PET MDF Core 4x8\",\n  },\n  {\n    value: 11.85,\n    label: \"Royal Blue Super Matte\",\n    id: \"MDPE3070-181S36\",\n    des: \"3/4 (18mm) Royal Blue Super Matte PET MDF Core 4x8\",\n  },\n  {\n    value: 11.85,\n    label: \"Royal Blue High Gloss\",\n    id: \"MDPE3070-181S90\",\n    des: \"3/4 (18mm) Royal Blue High Gloss PET MDF Core 4x8\",\n  },\n  {\n    value: 11.85,\n    label: \"Majestic Super Matte\",\n    id: \"MDPE3074-181S36\",\n    des: \"3/4 (18mm) Majestic Super Matte PET MDF Core 4x8\",\n  },\n  {\n    value: 11.85,\n    label: \"Majestic High Gloss\",\n    id: \"MDPE3074-181S90\",\n    des: \"3/4 (18mm) Majestic High Gloss PET MDF Core 4x8\",\n  },\n  {\n    value: 9.85,\n    label: \"White Concrete\",\n    id: \"PBME0F01-181S72\",\n    des: \"18mm (3/4) #01 White Concrete TFL PB 4x9'\",\n  },\n  {\n    value: 9.85,\n    label: \"Grey Concrete\",\n    id: \"PBME0F02-181S72\",\n    des: \"18mm (3/4) #02 Grey Concrete TFL PB 4x9'\",\n  },\n  {\n    value: 7.85,\n    label: \"Brushed Aluminum\",\n    id: \"PBME0474T-192S58\",\n    des:\n      \"19mm (3/4) L474 Brushed Aluminum (Crystalite) Matte Frosted 2S TFL PB 4x8\",\n  },\n  {\n    value: 7.85,\n    label: \"River Rock (Alto)\",\n    id: \"PBME0538T-192S75\",\n    des: \"19mm (3/4) L538 River Rock (Alto) Texture Type 3  2S TFL PB 4x8\",\n  },\n  {\n    value: 7.85,\n    label: \"Sheer Beauty (Karisma)\",\n    id: \"PBME0581T-192S774\",\n    des: \"19mm (3/4) L581 Sheer Beauty (Karisma) 2S TFL PB 49x97\",\n  },\n  {\n    value: 7.85,\n    label: \"Fashionista (Karisma)\",\n    id: \"PBME0582T-192S77\",\n    des: \"19mm (3/4) L582 Fashionista (Karisma) 2S TFL PB 49x97\",\n  },\n  {\n    value: 7.85,\n    label: \"The Chameleon (Karisma)\",\n    id: \"PBME0584T-192S77\",\n    des: \"19mm (3/4) L584 The Chameleon (Karisma)  2S TFL PB 49x97\",\n  },\n  {\n    value: 8.85,\n    label: \"Weekend Getaway (Viva)\",\n    id: \"PBME2003T-192S12\",\n    des:\n      \"19mm (3/4)  M2003 Weekend Getaway (Viva) Synchronized 2S TFL PB 4x8..TSCA Title VI Compliant\",\n  },\n  {\n    value: 8.85,\n    label: \"Winter Fun (Viva)\",\n    id: \"PBME2004T-192S12\",\n    des:\n      \"19mm (3/4)  M2004 Winter Fun (Viva) Synchronized 2S TFL PB  4x8 ..TSCA Title VI Compliant\",\n  },\n  {\n    value: 8.85,\n    label: \"Casting at First Light (Viva)\",\n    id: \"PBME2007T-192S12\",\n    des:\n      \"19mm (3/4) M2007 Casting at First Light (Viva) Synchronized 2S TFL PB  4x8..TSCA Title VI Compliant\",\n  },\n  {\n    value: 8.85,\n    label: \"Sugar on Ice (Viva)\",\n    id: \"PBME2014T-192S12\",\n    des:\n      \"19mm (3/4) M2014 Sugar on Ice (Viva) Synchronized 2S TFL PB 4x8..TSCA Title VI Compliant\",\n  },\n  {\n    value: 11.85,\n    label: \"Gris Nube HG\",\n    id: \"MDMENUBEA-181S90\",\n    des: \"18mm (3/4) Gris Nube HG 1S MDF  (4'x9')..\",\n  },\n  {\n    value: 11.85,\n    label: \"Olmo HG\",\n    id: \"MDMEOLMOA-181S90\",\n    des: \"18mm (3/4) Olmo HG  1S MDF (4'x9')..\",\n  },\n  {\n    value: 9.0,\n    label: \"Como Ash 01 1S\",\n    id: \"PBMECA01A-181S12\",\n    des: \"18mm (3/4) Como Ash 01 1S PB (4'x9').\",\n  },\n  {\n    value: 9.0,\n    label: \"Como Ash  03 1S\",\n    id: \"PBMECA03A-181S12\",\n    des: \"18mm (3/4) Como Ash  03 1S PB (4'x9')..\",\n  },\n  {\n    value: 8.85,\n    label: \"Ida 01 2S\",\n    id: \"PBMEID01A-182S12\",\n    des: \"18mm (3/4) Ida 01 2S PB  (4'x9')..\",\n  },\n  {\n    value: 8.85,\n    label: \"Ida 03 2S\",\n    id: \"PBMEID03A-182S12\",\n    des: \"18mm (3/4) Ida 03 2S PB (4'x9')..\",\n  },\n  {\n    value: 8.85,\n    label: \"Muratti 01 2S\",\n    id: \"PBMEMU01A-182S12\",\n    des: \"18mm (3/4) Muratti 01 2S PB (4'x9')..\",\n  },\n  {\n    value: 8.85,\n    label: \"Muratti 04 2S\",\n    id: \"PBMEMU04A-182S12\",\n    des: \"18mm (3/4) Muratti 04 2S PB (4'x9')..\",\n  },\n  {\n    value: 11.85,\n    label: \"Gris Nube SM 1S\",\n    id: \"MDMENUBEA-181S36\",\n    des: \"18mm (3/4) Gris Nube SM 1S MDF (4'x9')..\",\n  },\n  {\n    value: 11.85,\n    label: \"Albedo Collection Door Set\",\n    id: \"AlbedoDoor\",\n    des: \"Albedo Collection Door Set (per sqft)..\",\n  },\n  {\n    value: 10.85,\n    label: \"Pearl White HG PET Albedo Collection Door Set \",\n    id: \"AlbedoDoor-W-HG\",\n    des:\n      \"Pearl White HG (MDPE3004-181S90) PET Albedo Collection Door Set (per sqft)....\",\n  },\n  {\n    value: 9.85,\n    label: \"White Chocolate (Urbania)\",\n    id: \"PBME0492T-192S73\",\n    des:\n      \"19mm (3/4) L492 White Chocolate (Urbania) Texture Type 2 2S TFL PB 4x8\",\n  },\n  {\n    value: 9.85,\n    label: \"Egger Sand Gladstone Oak\",\n    id: \"PBME3309E-192S12-60110\",\n    des: \"19mm (3/4) Egger H3309-ST28 Sand Gladstone Oak  60 X110-1/4\",\n  },\n  {\n    value: 9.85,\n    label: \"Egger Grey-Beige Gladstone Oak\",\n    id: \"PBME3326E-192S28-60110\",\n    des: \"19mm (3/4) Egger H3326-ST28 Grey-Beige Gladstone Oak  60 X110-1/4\",\n  },\n  {\n    value: 9.85,\n    label: \"Egger Brown Tossini Elm\",\n    id: \"PBME1212E-192S33-60110\",\n    des: \"19mm (3/4) Egger H1212-ST33 Brown Tossini Elm  60 X110-1/4 \",\n  },\n  {\n    value: 9.85,\n    label: \"Egger Tobacco Gladstone Oak\",\n    id: \"PBME3325E-192S28-60110\",\n    des: \"19mm (3/4) Egger H3325-ST28 Tobacco Gladstone Oak  60 X110-1/4 \",\n  },\n  {\n    value: 9.85,\n    label: \"Egger Tobacco Halifax Oak\",\n    id: \"PBME1181E-192S37-60110\",\n    des: \"19mm (3/4) Egger H1181-ST37 Tobacco Halifax Oak  60 X110-1/4 \",\n  },\n  {\n    value: 9.85,\n    label: \"Egger Black Halifax Oak\",\n    id: \"PBME3182E-192S37-60110\",\n    des: \"19mm (3/4) Egger H3182-ST37 Black Halifax Oak   60 X110-1/4 \",\n  },\n  {\n    value: 9.85,\n    label: \"Egger Natural Halifax Oak\",\n    id: \"PBME1180E-192S37-60110\",\n    des: \"19mm (3/4) Egger H1180-ST37 Natural Halifax Oak  60 X110-1/4 \",\n  },\n  {\n    value: 9.85,\n    label: \"Egger White Halifax Oak\",\n    id: \"PBME1176E-192S37-60110\",\n    des: \"19mm (3/4) Egger H1176-ST37 White Halifax Oak  60 X110-1/4 \",\n  }\n];\n\nexport default panelFinish;\n","import React from \"react\";\n\nfunction TableHead() {\n  return (\n    <thead className=\"table-success\">\n      <tr>\n        <th colSpan=\"2\" className=\"text-center\"></th>\n        <th className=\"text-center\">Item#</th>\n        <th className=\"text-center\">Panel Finish</th>\n        <th className=\"text-center\">Panel ID</th>\n        <th className=\"text-center\">Qty</th>\n        <th className=\"text-center\">Width(inch)</th>\n        <th className=\"text-center\">Height(inch)</th>\n        <th className=\"text-center\">Hinge Hole</th>\n        <th className=\"text-center\">Match grain</th>\n        <th className=\"text-center\">Miter cut</th>\n        <th className=\"text-center\">Price</th>\n        <th className=\"text-center\">Subtotal</th>\n      </tr>\n    </thead>\n  );\n}\nexport default TableHead;\n","import React,  {useState} from \"react\";\nimport { CSVLink } from \"react-csv\";\n\nfunction TableFooter(props) {\n  const items = props.items;\n  const [addNumberOfRow, setAddNumberOfRow] = useState(1);\n\n  let testTotal = 0;\n  let totalQty = 0;\n  let packagingFee = 0;\n  const [IsFreight, setIsFreight] = useState(false);\n  for (let row in items) {\n    testTotal += Number(items[row].subtotal);\n    totalQty += Number(items[row].qty);\n    packagingFee += Number(items[row].width * items[row].height* items[row].qty);\n  }\n  packagingFee =  +(Math.round((packagingFee / 144) + \"e+2\") + \"e-2\")\n  \n  testTotal = +(Math.round(testTotal + \"e+2\") + \"e-2\");\n  if (IsFreight ===true){\n    testTotal = +(Math.round((testTotal + packagingFee) + \"e+2\") + \"e-2\");\n  }\n  \n  function handleClick(n) {\n    props.onAdd(n);\n  }\n  \n  function handleAddRowNumber(event) {\n    const needRow = event.target.value;\n    setAddNumberOfRow(needRow);\n  }\n\n  function handleFreight(event){\n    props.setIsFreight(event.target.checked);\n    setIsFreight(event.target.checked);\n  }\n\n\n  return (\n    <tfoot>\n      <tr>\n        <td colSpan=\"5\" align=\"right\">\n          total items\n        </td>\n        <td>{totalQty}</td>\n        <td colSpan=\"2\"> Packaging\n        <input\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          id=\"defaultCheck2\"\n          name=\"freight\"\n          checked={IsFreight}\n          onChange={handleFreight}\n        />\n        {IsFreight && (\n          <td>{packagingFee}</td>\n        )}\n        </td>\n        <td colSpan=\"6\" align=\"right\">\n        {testTotal}\n        </td>\n      </tr>\n\n      <tr>\n        <td colSpan=\"3\">\n          <div className=\"input-group\">\n            <i\n              className=\"bi bi-plus-circle-fill btn btn-secondary\"\n              onClick={() => handleClick(addNumberOfRow)}\n            >\n              add row\n            </i>\n            <input\n              type=\"number\"\n              name=\"NumOfRow\"\n              className=\"form-control\"\n              value={addNumberOfRow}\n              onChange={(event) => handleAddRowNumber(event)}\n              style={{ width: \"5em\" }}\n            />\n          </div>\n        </td>\n        <td colSpan=\"4\">\n          <i\n            className=\"bi bi-file-earmark-pdf-fill btn btn-primary\"\n            onClick={props.printPDF}\n            style={{ color: \"white\", borderStyle: \"solid\" }}\n          >\n            PDF\n          </i>\n          <CSVLink data={props.items} filename={\"my-file.csv\"} target=\"_blank\">\n            <i\n              className=\"bi bi-filetype-csv btn btn-primary\"\n              style={{ color: \"white\", borderStyle: \"solid\" }}\n            >\n              CSV\n            </i>\n          </CSVLink>\n        </td>\n      </tr>\n    </tfoot>\n  );\n}\n\nexport default TableFooter;\n","import React from \"react\";\n\nfunction PrintHead({ info }) {\n  return (\n    <thead className=\"print-table-head\">\n      <tr>\n        <th colSpan={3} rowSpan={3}>\n          <img\n            src=\"https://adroitmanufacturing.allmoxy.com/data/header/Adroit_logo_3d-01-01.png\"\n            alt=\"adroit-manufacturing-logo\"\n            width={120}\n            height={50}\n          />\n        </th>\n        <th colSpan={3}>Adroit</th>\n        <th className=\"listhead\">Document</th>\n        <th className=\"listhead\">ORDER ACKNOWLEDGE</th>\n        <th colSpan={2}>BILLING TO:</th>\n        <th colSpan={3}>SHIPPING TO:</th>\n      </tr>\n      <tr>\n        <th colSpan={3}>Adroit LOGISTICS</th>\n        <th className=\"needBorder\">N</th>\n        <th className=\"needBorder\">95-23000555</th>\n        <th colSpan={2} rowSpan={5} className=\"needBorder\">\n          {info.billing}\n        </th>\n        <th colSpan={3} rowSpan={5} className=\"needBorder\">\n          {info.shipping}\n        </th>\n      </tr>\n      <tr>\n        <th colSpan={3}>859 39th St</th>\n        <th className=\"needBorder\">Date</th>\n        <th className=\"needBorder\">{info.date}</th>\n      </tr>\n      <tr>\n        <th colSpan={3}>www.adroit.com</th>\n        <th colSpan={3}>BROOKLYN</th>\n        <th className=\"needBorder\">YOUR REFERENCE</th>\n        <th className=\"needBorder\">041723</th>\n      </tr>\n      <tr>\n        <th colSpan={3}>customer.service@adroit.com</th>\n        <th colSpan={3}>Tel.(718)431-0089</th>\n        <th className=\"needBorder\">Weight(Lb.)</th>\n        <th className=\"needBorder\">5431.03</th>\n      </tr>\n      <tr>\n        <th colSpan={3} rowSpan={2}>\n          com.: 517 LUIS VAZQUEZ\n        </th>\n        <th colSpan={3}>Fax.(718)431-0060</th>\n        <th className=\"needBorder\">Volume(m3)</th>\n        <th className=\"needBorder\">5431.03</th>\n      </tr>\n      <tr>\n        <th colSpan={3}>-- Operation insured by MAPFRE</th>\n        <th className=\"needBorder\">Bulks</th>\n        <th className=\"needBorder\">9407</th>\n        <th colSpan={6}>Tel:+11234567890</th>\n      </tr>\n      <tr>\n        <th className=\"text-center listhead\">ITEM#</th>\n        <th className=\"text-center listhead\">PANEL ID</th>\n        <th className=\"text-center listhead\">DESCRIPTION</th>\n        <th className=\"text-center listhead\">PT</th>\n        <th className=\"text-center listhead\">HEIGHT</th>\n        <th className=\"text-center listhead\">WIDTH</th>\n        <th className=\"text-center listhead\">DEPTH</th>\n        <th className=\"text-center listhead\">QUANTITY</th>\n        <th className=\"text-center listhead\">PRICE</th>\n        <th className=\"text-center listhead\">DISCOUNTS</th>\n        <th className=\"text-center listhead\">TOTAL</th>\n        <th className=\"text-center listhead\">LB.</th>\n        <th className=\"text-center listhead\">M3</th>\n      </tr>\n    </thead>\n  );\n}\nexport default PrintHead;\n","import React from \"react\";\n\nfunction PrintFooter(props) {\n  const items = props.items;\n  const IsFreight = props.IsFreight;\n\n  let testTotal = 0;\n  let totalQty = 0;\n  let packagingFee = 0;\n  for (let row in items) {\n    testTotal += Number(items[row].subtotal);\n    totalQty += Number(items[row].qty);\n    packagingFee += Number(\n      items[row].width * items[row].height * items[row].qty\n    );\n  }\n  packagingFee = +(Math.round(packagingFee / 144 + \"e+2\") + \"e-2\");\n\n  testTotal = +(Math.round(testTotal + \"e+2\") + \"e-2\");\n  if (IsFreight === true) {\n    testTotal = +(Math.round(testTotal + packagingFee + \"e+2\") + \"e-2\");\n  }\n\n  return (\n    <tfoot className=\"print-footer\">\n      <tr>\n        <td colSpan=\"7\" align=\"right\">\n          total items\n        </td>\n        <td>{totalQty}</td>\n        {IsFreight && <td>Packaging Fee {packagingFee}</td>}\n        <td colSpan=\"3\" align=\"right\">\n          ${testTotal}\n        </td>\n      </tr>\n    </tfoot>\n  );\n}\n\nexport default PrintFooter;\n","import React, { Fragment } from \"react\";\n\nfunction ReadOnly({ item, ItemNum}) {\n  let height = item.height;\n  let description = item.panelFinish;\n  if (item.hingeHole === true){\n      if (height < 38.875) {\n        description += \" 'Hinge-2H' \";\n      } else if (height < 64.375) {\n        description += \" 'Hinge-3H' \";\n      } else if (height < 79.375) {\n        description += \" 'Hinge-4H' \";\n      } else if (height < 96) {\n        description += \" 'Hinge-5H' \";\n      }\n  }\n  if (item.matchGrain === true){\n    description = description + \" 'Match Grain ' \";\n  }\n  if(item.miterCut !== \"None\"){\n  description = description + \" '\" +  item.miterCut+\"'\";\n  }\n  let discount = 0;\n  discount = +(Math.round((item.subtotal - item.price * item.qty) + \"e+2\") + \"e-2\") ;\n\n  return (\n    <Fragment>\n    <tr className=\"ReadOnly\">\n      <td>{ItemNum + 1}</td>\n      <td>{item.panelId}</td>\n      <td>{description}</td>\n      <td></td>\n      <td>{item.height}</td>\n      <td>{item.width}</td>\n      <td></td>\n      <td align= \"center\">{item.qty}</td>\n      <td>{item.price}</td>\n      <td>{discount}</td>\n      <td>{item.subtotal}</td>\n      <td></td>\n      <td></td>\n    </tr>\n    </Fragment>\n  );\n}\nexport default ReadOnly;\n","import React,{useState,useEffect} from \"react\";\nimport panelFinishList from \"../panelFinish.js\";\n\nfunction NewTableBody({\n  item,\n  ItemNum,\n  handleDeleteClick,\n  handleCopyClick,\n  handleEditAllInOne,\n  handleEditTwo,\n}) {\n  const [widthValue, setWidthValue] = useState(true);\n  const [heightValue, setHeightValue] = useState(true);\n  const [widthDecimal, setWidthDecimal] = useState(true);\n  const [heightDecimal, setHeightDecimal] = useState(true);\n  const [qtyInteger, setQtyInteger] = useState(true);\n  const [oversize, setOversize] = useState(true);\n\n\n  function isValidNumber(number) {\n    const regex = /^\\d+(\\.\\d{1,3})?$/;\n    return regex.test(number);\n  }\n  function isPositiveInteger(input) {\n    return /^[1-9]\\d*$/.test(input);\n  }\n\n  useEffect(() => {\n    //if is in range\n    if (item.width <= 0 || item.width > 48) {\n      setWidthValue(false);\n    } else {\n      setWidthValue(true);\n    }\n    if (item.height <= 0 || item.height > 96){\n      setHeightValue(false);\n    }\n    else{\n      setHeightValue(true);\n    }\n    //if is in three decimal\n    if(!isValidNumber(item.width) ){\n      if(isNaN(item.width)){\n        setWidthDecimal(true);\n      }\n      else\n      setWidthDecimal (false);\n    }\n    else\n    setWidthDecimal (true);\n\n    if (!isValidNumber(item.height)){\n      if(isNaN(item.height)){\n        setHeightDecimal(true);\n      }\n      else\n      setHeightDecimal(false);\n    }\n    else\n    setHeightDecimal(true);\n    // if qty is integer\n\n    if (!isPositiveInteger(item.qty)){\n      if(isNaN(item.qty)){\n        setQtyInteger(true);\n      }\n      else\n      setQtyInteger(false);\n    }\n    else\n    setQtyInteger(true);\n    //if qty is bigger than 0 \n\n    const size = (item.width * item.height)/144;\n\n    if(size > 30 || size < 0 ){\n      setOversize(false);\n      item.price = NaN;\n      item.subtotal = NaN;\n    }\n    else\n    setOversize(true);\n  }, [item.width, item.height, item.qty]);\n\n  return (\n    <tr>\n      <td>\n        <i\n          className=\"bi bi-x-circle-fill btn\"\n          onClick={() => handleDeleteClick(item.id)}\n        ></i>\n      </td>\n      <td>\n        <i\n          className=\"bi bi-files btn\"\n          onClick={() => handleCopyClick(item.id)}\n        ></i>\n      </td>\n      <td className=\"text-center\">{ItemNum + 1}</td>\n      <td>\n        <input\n          type=\"text\"\n          list=\"data\"\n          className=\"form-control\"\n          style={{ width: \"18em\" }}\n          placeholder=\"select panel\"\n          name=\"panelFinish\"\n          value={item.panelFinish}\n          onChange={(event) => handleEditTwo(event, item.id, item)}\n        />\n        <datalist id=\"data\">\n          {panelFinishList.map((item, key) => (\n            <option key={key} value={item.label} />\n          ))}\n        </datalist>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          list=\"data2\"\n          className=\"form-control\"\n          placeholder=\"select panel ID\"\n          name=\"panelId\"\n          value={item.panelId}\n          onChange={(event) => handleEditTwo(event, item.id, item)}\n        />\n        <datalist id=\"data2\">\n          {panelFinishList.map((item, key) => (\n            <option key={key} value={item.id} />\n          ))}\n        </datalist>\n      </td>\n      <td>\n        <input\n          type=\"number\"\n          name=\"qty\"\n          className={qtyInteger === false ? \"form-control is-invalid\" : \"form-control\"}\n          value={item.qty}\n          onChange={(event) => handleEditAllInOne(event, item.id, item)}\n          style={{ width: \"5em\" }}\n        />\n        {qtyInteger === false && (\n          <div className=\"invalid-feedback\">Please enter non zero hole number</div>\n        )}\n      </td>\n      <td>\n        <input\n          type=\"number\"\n          name=\"width\"\n          className={widthValue === false ? \"form-control is-invalid\" : \"form-control\"}\n          value={item.width}\n          style={{ width: \"6em\" }}\n          onChange={(event) => handleEditAllInOne(event, item.id, item)}\n        />\n        {oversize === false && (\n          <div className=\"oversize\">The Door Panel is oversized. Please contact sales to place order</div>\n        )}\n        {widthValue === false && (\n          <div className=\"invalid-feedback\">Please enter value not zero and less than 48</div>\n        )}\n        {widthDecimal === false && (\n          <div className=\"invalid-feedback\">Please enter less than 4 decimal place</div>\n        )}\n      </td>\n      <td>\n        <input\n          type=\"number\"\n          name=\"height\"\n          className={heightValue === false ? \"form-control is-invalid\" : \"form-control\"}\n          value={item.height}\n          style={{ width: \"6em\" }}\n          onChange={(event) => handleEditAllInOne(event, item.id, item)}\n        />\n        {heightValue === false && (\n          <div className=\"invalid-feedback\">Please enter value not zero and less than 96</div>\n        )}\n        {heightDecimal === false && (\n          <div className=\"invalid-feedback\">Please enter less than 4 decimal place</div>\n        )}\n      </td>\n      <td>\n        <input\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          id=\"defaultCheck1\"\n          name=\"hingeHole\"\n          checked={item.hingeHole}\n          onChange={(event) => handleEditAllInOne(event, item.id, item)}\n        />\n      </td>\n      <td>\n        <input\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          id=\"defaultCheck2\"\n          name=\"matchGrain\"\n          checked={item.matchGrain}\n          onChange={(event) => handleEditAllInOne(event, item.id, item)}\n        />\n      </td>\n      <td>\n        <select\n          id=\"inlineFormCustomSelectPref\"\n          className=\"form-select w-auto\"\n          name=\"miterCut\"\n          value={item.miterCut}\n          onChange={(event) => handleEditAllInOne(event, item.id, item)}\n        >\n          <option defaultValue=\"None\">None</option>\n          <option value=\"Top\">Top</option>\n          <option value=\"1H\">1H</option>\n          <option value=\"Bot\">Bot</option>\n        </select>\n      </td>\n      <td>\n        <input\n          name=\"price\"\n          type=\"number\"\n          className=\"form-control bg-light rounded-pill\"\n          value={item.price}\n          style={{ width: \"6em\" }}\n          readOnly\n          disabled\n        />\n      </td>\n      <td>\n        <input\n          name=\"Subtotal\"\n          className=\"form-control bg-light rounded-pill\"\n          type=\"number\"\n          value={item.subtotal}\n          style={{ width: \"6em\" }}\n          readOnly\n          disabled\n        />\n      </td>\n    </tr>\n  );\n}\n\nexport default NewTableBody;\n","import React, { Fragment, useState, useRef } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { useReactToPrint } from \"react-to-print\";\nimport panelFinishList from \"../panelFinish.js\";\nimport * as XLSX from \"xlsx/xlsx.js\";\nimport TableHead from \"./DoorTableHead\";\nimport TableFooter from \"./DoorTableFooter\";\nimport PrintHead from \"./DoorPrintHead\";\nimport PrintFooter from \"./DoorPrintFooter\";\nimport ReadOnly from \"./DoorPrintBody\";\nimport NewTableBody from \"./DoorTableBody\";\n\nfunction CreateArea({ info }) {\n  //Create the main array contains objects that user create or default object\n  const [items, setItems] = useState([]);\n  const [IsFreight, setIsFreight] = useState(false);\n  //Read the files and import the data into Items\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n\n    // Check if the file is an Excel file. If not, return alert.\n    if (\n      !file ||\n      (!file.name.endsWith(\".xlsx\") && !file.name.endsWith(\".csv\")) ||\n      !file.type ===\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    ) {\n      alert(\"Please select an Excel file (XLSX)\");\n      return;\n    }\n    //Read the file name\n    const reader = new FileReader();\n    reader.readAsBinaryString(file);\n\n    //Load the file data\n    reader.onload = (e) => {\n      //Get the file\n      const items = e.target.result;\n      //Read the file\n      const workbook = XLSX.read(items, { type: \"binary\" });\n      //Read the first sheet only and get the sheet name\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      //Create the new variable to store the data from the sheet\n      let parsedData = XLSX.utils.sheet_to_json(sheet);\n\n      //Create a new array to store the objects in the data\n      let newArray = [];\n\n      for (let row in parsedData) {\n        //Create a new object to store data from the file\n        let newItem = {\n          panelFinish: \"\",\n          panelId: \"\",\n          qty: NaN,\n          width: NaN,\n          height: NaN,\n          hingeHole: false,\n          matchGrain: false,\n          miterCut: \"None\",\n          price: NaN,\n          subtotal: NaN,\n          id: nanoid(),\n        };\n\n        const priceArr = mycal(panelFinishList, parsedData[row]);\n        const priceField = \"price\";\n        const sutotalField = \"subtotal\";\n        const idField = \"id\";\n\n        //Input all the edited data from the file into the new object\n        Object.keys(newItem).forEach(function(key) {\n          newItem[key] = parsedData[row][key];\n        });\n\n        //Check if the T/F state is string, then change the datatype from string into boolean\n        if (parsedData[row][\"hingeHole\"] === \"false\") {\n          newItem.hingeHole = false;\n        } else if (parsedData[row][\"hingeHole\"] === \"true\") {\n          newItem.hingeHole = true;\n        }\n        if (parsedData[row][\"matchGrain\"] === \"false\") {\n          newItem.matchGrain = false;\n        } else if (parsedData[row][\"matchGrain\"] === \"true\") {\n          newItem.matchGrain = true;\n        }\n\n        //Re-Calculate the price and subtotal of the object, Re-set the id for the object\n        newItem[priceField] = priceArr[0];\n        newItem[sutotalField] = priceArr[1];\n        newItem[idField] = Number(row) + 1;\n\n        //According to the Panel ID, Re-set the empty part of Panel Finish\n        setPanelFinish(newItem);\n\n        //Push the object into the array\n        newArray.push(newItem);\n      }\n\n      //Set the new Array into the items\n      setItems(newArray);\n    };\n  };\n\n  //The function matches the panel finish according to the panel ID\n  const setPanelFinish = (newItem) => {\n    if (isNaN(newItem.panelFinish) && newItem.panelId) {\n      const matchingFinish = panelFinishList.find(\n        (finish) => finish.id === newItem.panelId\n      );\n      if (matchingFinish) {\n        newItem.panelFinish = matchingFinish.label;\n      }\n    }\n  };\n\n  function mycal(PL, obj) {\n    const height = Number(obj.height);\n    const width = Number(obj.width);\n    const qty = Number(obj.qty);\n    let panel_value = 0;\n    let unit_price = 0;\n    let discount = 1;\n    let grain = \"\";\n    const Sindex = PL.findIndex(\n      (pitem) => pitem.label === obj.panelFinish || pitem.id === obj.panelId\n    );\n    if (Sindex !== -1) {\n      panel_value = Number(PL[Sindex].value);\n      grain = PL[Sindex].grain;\n    }\n\n    if (obj.hingeHole) {\n      if (height < 38.875) {\n        unit_price += 2;\n      } else if (height < 64.375) {\n        unit_price += 3;\n      } else if (height < 79.375) {\n        unit_price += 4;\n      } else if (height <= 96) {\n        unit_price += 5;\n      }\n    }\n\n    if (obj.miterCut !== \"None\") unit_price += 15;\n\n    if (grain === \"Y\") {\n      if (obj.matchGrain) unit_price += 15;\n    }\n    let sizeOfDoor = (width * height) / 144;\n    if (sizeOfDoor <= 1.5) sizeOfDoor = 1.5;\n\n    unit_price += panel_value * sizeOfDoor;\n    let subtotal = qty * unit_price;\n    if (sizeOfDoor > 3.0 && sizeOfDoor <= 6.0) {\n      discount = 0.9;\n    } else if (sizeOfDoor > 6.0 && sizeOfDoor <= 9.0) {\n      discount = 0.85;\n    } else if (sizeOfDoor > 9.0 && sizeOfDoor <= 13.0) {\n      discount = 0.8;\n    } else if (sizeOfDoor > 13.0 && sizeOfDoor <= 30.0) {\n      discount = 0.75;\n    }\n    subtotal = +(Math.round(subtotal + \"e+2\") + \"e-2\");\n    unit_price = subtotal / obj.qty;\n    unit_price = +(Math.round(unit_price + \"e+2\") + \"e-2\");\n\n    if (width <= 0 || width > 48) {\n      unit_price = NaN;\n      subtotal = NaN;\n    }\n    if (height <= 0 || height > 965) {\n      unit_price = NaN;\n      subtotal = NaN;\n    }\n    if (qty <= 0) {\n      unit_price = NaN;\n      subtotal = NaN;\n    }\n    subtotal *= discount;\n    subtotal = +(Math.round(subtotal + \"e+2\") + \"e-2\");\n    return [unit_price, subtotal];\n  }\n\n  function updateRow(event, itemId, item) {\n    const fieldName = event.target.getAttribute(\"name\");\n    let fieldValue;\n    if (fieldName === \"hingeHole\" || fieldName === \"matchGrain\") {\n      fieldValue = event.target.checked;\n    } else {\n      fieldValue = event.target.value;\n    }\n    const newData = { ...item };\n    newData[fieldName] = fieldValue;\n    const priceArr = mycal(panelFinishList, newData);\n    const priceField = \"price\";\n    const sutotalField = \"subtotal\";\n    newData[priceField] = priceArr[0];\n    newData[sutotalField] = priceArr[1];\n\n    const editedItem = {\n      id: itemId,\n      panelFinish: newData.panelFinish,\n      panelId: newData.panelId,\n      qty: newData.qty,\n      width: newData.width,\n      height: newData.height,\n      hingeHole: newData.hingeHole,\n      matchGrain: newData.matchGrain,\n      miterCut: newData.miterCut,\n      price: newData.price,\n      subtotal: newData.subtotal,\n    };\n\n    const newItems = [...items];\n    const index = items.findIndex((item) => item.id === itemId);\n    newItems[index] = editedItem;\n    setItems(newItems);\n  }\n\n  function updateTwo(event, itemId, item) {\n    const newData = { ...item };\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const Sindex = panelFinishList.findIndex(\n      (item) => item.label === fieldValue || item.id === fieldValue\n    );\n    if (fieldName === \"panelFinish\") {\n      const fieldName1 = \"panelFinish\";\n      const fieldName2 = \"panelId\";\n      newData[fieldName1] = fieldValue;\n      if (Sindex !== -1) {\n        newData[fieldName2] = panelFinishList[Sindex].id;\n      }\n    } else if (fieldName === \"panelId\") {\n      const fieldName1 = \"panelId\";\n      const fieldName2 = \"panelFinish\";\n      newData[fieldName1] = fieldValue;\n      if (Sindex !== -1) {\n        newData[fieldName2] = panelFinishList[Sindex].label;\n      }\n    }\n    const priceArr = mycal(panelFinishList, newData);\n    const priceField = \"price\";\n    const sutotalField = \"subtotal\";\n    newData[priceField] = priceArr[0];\n    newData[sutotalField] = priceArr[1];\n\n    const editedItem = {\n      id: itemId,\n      panelFinish: newData.panelFinish,\n      panelId: newData.panelId,\n      qty: newData.qty,\n      width: newData.width,\n      height: newData.height,\n      hingeHole: newData.hingeHole,\n      matchGrain: newData.matchGrain,\n      miterCut: newData.miterCut,\n      price: newData.price,\n      subtotal: newData.subtotal,\n    };\n    const newItems = [...items];\n    const index = items.findIndex((item) => item.id === itemId);\n    newItems[index] = editedItem;\n    setItems(newItems);\n  }\n\n  function deleteRow(itemId) {\n    const newItems = [...items];\n    const index = items.findIndex((item) => item.id === itemId);\n    newItems.splice(index, 1);\n    setItems(newItems);\n  }\n\n  function copyRow(itemId) {\n    const newItems = [...items];\n    const index = items.findIndex((item) => item.id === itemId);\n    const copyItem = newItems[index];\n    const tempItem = {\n      id: 0,\n      panelFinish: copyItem.panelFinish,\n      panelId: copyItem.panelId,\n      qty: copyItem.qty,\n      width: copyItem.width,\n      height: copyItem.height,\n      hingeHole: copyItem.hingeHole,\n      matchGrain: copyItem.matchGrain,\n      miterCut: copyItem.miterCut,\n      price: copyItem.price,\n      subtotal: copyItem.subtotal,\n    };\n    tempItem.id = nanoid();\n    newItems.splice(index, 0, tempItem);\n    setItems(newItems);\n  }\n\n  function addRow(n) {\n    const newItems = [];\n    for (let i = 0; i < n; i++) {\n      const newItem = {\n        panelFinish: \"\",\n        panelId: \"\",\n        qty: NaN,\n        width: NaN,\n        height: NaN,\n        hingeHole: false,\n        matchGrain: false,\n        miterCut: \"None\",\n        price: NaN,\n        subtotal: NaN,\n        id: nanoid(),\n      };\n      newItems.push(newItem);\n    }\n    const newItemsAdd = [...items, ...newItems];\n    setItems(newItemsAdd);\n  }\n\n  const componentPDF = useRef();\n  const generatePDF = useReactToPrint({\n    content: () => componentPDF.current,\n    documentTile: \"UserData\",\n  });\n\n  return (\n    <Fragment>\n      <table\n        className=\"table table-hover table-sm table-responsive-sm\"\n        id=\"my-table\"\n      >\n        <TableHead />\n        <tbody>\n          {items.map((rowItem, index) => {\n            return (\n              <NewTableBody\n                key={index}\n                ItemNum={index}\n                item={rowItem}\n                handleDeleteClick={deleteRow}\n                handleCopyClick={copyRow}\n                handleEditAllInOne={updateRow}\n                handleEditTwo={updateTwo}\n              />\n            );\n          })}\n        </tbody>\n        <TableFooter\n          items={items}\n          onAdd={addRow}\n          printPDF={generatePDF}\n          setIsFreight={setIsFreight}\n        />\n      </table>\n      <div hidden>\n        <table\n          id=\"PrintTable\"\n          className=\"table table-hover table-sm table-responsive-sm\"\n          ref={componentPDF}\n        >\n          <PrintHead info={info} />\n          <tbody>\n            {items.map((rowItem, index) => {\n              return <ReadOnly key={index} ItemNum={index} item={rowItem} />;\n            })}\n          </tbody>\n          <PrintFooter items={items} IsFreight={IsFreight} />\n        </table>\n      </div>\n      <input\n        type=\"file\"\n        accept=\".xlsx, .xls, .csv\"\n        className=\"form-control bg-light rounded-pill\"\n        onChange={handleFileUpload}\n      />\n    </Fragment>\n  );\n}\nexport default CreateArea;\n","import React, { Fragment, useState } from \"react\";\nimport CreateDoor from \"./CreateDoor\";\n\nfunction Toggle() {\n  const [info, setInfo] = useState({\n    name: \"\",\n    description: \"\",\n    date: \"\",\n    billing: \"\",\n    shipping: \"\",\n  });\n  const [isCabinetClicked, setCabinetClicked] = useState(false);\n  const [isDoorClicked, setDoorClicked] = useState(false);\n  function cabinetClicked() {\n    setCabinetClicked(!isCabinetClicked);\n  }\n\n  function doorClicked() {\n    setDoorClicked(!isDoorClicked);\n  }\n  return (\n    <Fragment>\n      <div class=\"input-group d-flex justify-content-center\">\n        <i\n          onClick={cabinetClicked}\n          className={\n            isCabinetClicked\n              ? \"bi bi-archive-fill btn btn-warning\"\n              : \"bi bi-archive-fill btn btn-outline-warning\"\n          }\n        >\n          Cabinet\n        </i>\n        <i\n          onClick={doorClicked}\n          className={\n            isDoorClicked\n              ? \"bi bi-door-open-fill btn btn-success\"\n              : \"bi bi-door-open-fill btn btn-outline-success\"\n          }\n        >\n          Door\n        </i>\n      </div>\n      <div id=\"main\">\n        {isDoorClicked ? <CreateDoor info={info} /> : null}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Toggle;\n","import React, { useState } from \"react\";\nimport Toggle from \"./Toggle\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Toggle/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}